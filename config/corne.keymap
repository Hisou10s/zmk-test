/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&to 3>;
            key-positions = <39 40>;
            layers = <0>;
        };

        Tilde {
            bindings = <&kp GRAVE>;
            key-positions = <1 0>;
        };

        Layer0 {
            bindings = <&to 0>;
            key-positions = <39 40>;
            layers = <3>;
        };

        StickyLayer1 {
            bindings = <&sl 1>;
            key-positions = <14 16>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        HoldTap_behavior: HoldTap_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP_BEHAVIOR";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            flavor = "tap-preferred";
        };

        TapDance_behavior: TapDance_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&none>;

            tapping-term-ms = <200>;
        };

        Sticky_behavior: Sticky_behavior {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_BEHAVIOR";
            bindings = <&none>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mt LEFT_WIN ESCAPE    &kp Q  &kp W  &kp F      &kp P        &kp B                   &kp J                        &kp L                                   &kp U                &kp Y             &kp SQT                   &mt AMPERSAND GRAVE
&mt LEFT_ALT CAPSLOCK  &kp A  &kp R  &kp S      &kp T        &kp G                   &kp M                        &kp N                                   &kp E                &kp I             &kp O                     &mt RIGHT_BRACKET LEFT_BRACKET
&kp RCTRL              &kp Z  &kp X  &kp C      &kp D        &kp V                   &kp K                        &kp H                                   &mt SEMICOLON COMMA  &mt COLON PERIOD  &mt QUESTION EXCLAMATION  &mt SLASH NON_US_BACKSLASH
                                     &lt 2 TAB  &lt 1 ENTER  &mt LEFT_SHIFT SPACE    &mt BACKSPACE LC(BACKSPACE)  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt EQUAL MINUS
            >;
        };

        Raise {
            bindings = <
&kp LEFT_ALT    &kp N8        &kp N3     &kp N2    &kp N1       &kp N9         &kp F1  &kp F2   &kp F3   &kp F4   &none  &none
&kp LEFT_SHIFT  &kp N7        &kp N5     &kp N0    &kp N4       &kp N6         &kp F5  &kp F6   &kp F7   &kp F8   &none  &none
&kp DOLLAR      &kp ASTERISK  &kp CARET  &kp HASH  &kp PERCENT  &kp AT_SIGN    &kp F9  &kp F10  &kp F11  &kp F12  &none  &none
                                         &trans    &trans       &trans         &trans  &trans   &trans
            >;
        };

        Lower {
            bindings = <
&none  &kp HOME  &kp UP      &kp PG_UP      &none   &bt BT_CLR      &none   &none   &none   &none   &trans  &trans
&none  &kp LEFT  &kp DOWN    &kp RIGHT      &none   &bt BT_NXT      &none   &none   &none   &none   &trans  &trans
&none  &kp END   &kp DELETE  &kp PAGE_DOWN  &none   &bt BT_SEL 0    &none   &trans  &trans  &trans  &trans  &trans
                             &trans         &trans  &trans          &trans  &trans  &trans
            >;
        };

        Both {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E             &kp R         &kp T        &none  &none   &none  &none   &trans  &trans
&kp LCTRL  &kp A  &kp S  &kp D             &kp F         &kp G        &none  &none   &none  &none   &trans  &trans
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V         &kp B        &none  &none   &none  &trans  &trans  &trans
                         &mt ESCAPE ENTER  &kp LEFT_ALT  &kp SPACE    &none  &trans  &none
            >;
        };
    };
};
